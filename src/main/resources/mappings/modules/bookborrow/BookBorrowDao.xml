<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.bookborrow.dao.BookBorrowDao">
    
	<sql id="bookBorrowColumns">
		a.id AS "id",
		a.book_id AS "bookId.id",
		a.user_id AS "userId.id",
		a.status AS "status",
		a.num AS "num",
		a.ip AS "ip",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="bookBorrowJoins">
		LEFT JOIN sys_user u3 ON u3.id = a.user_id
	</sql>

	<select id="borrowNum"  parameterType="String" resultType="Integer">
		select count(id) from book_borrow
		where
			user_id = #{userId} and del_flag = '0'
	</select>

	<select id="runNum"  parameterType="String" resultType="Integer">
		select count(id) from book_borrow
		where
		user_id = #{userId} and del_flag = '0' and status = '2'
	</select>
    
	<select id="get" resultType="BookBorrow">
		SELECT 
			<include refid="bookBorrowColumns"/>
		FROM book_borrow a
		<include refid="bookBorrowJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BookBorrow">
		SELECT 
			<include refid="bookBorrowColumns"/>
		FROM book_borrow a
		<include refid="bookBorrowJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bookId != null and bookId.id != null and bookId.id != ''">
				AND a.book_id = #{bookId.id}
			</if>
			<if test="userId != null and userId.id != null and userId.id != ''">
				AND a.user_id = #{userId.id}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="num != null and num != ''">
				AND a.num = #{num}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BookBorrow">
		SELECT 
			<include refid="bookBorrowColumns"/>
		FROM book_borrow a
		<include refid="bookBorrowJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO book_borrow(
			id,
			book_id,
			user_id,
			status,
			num,
			ip,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{bookId.id},
			#{userId.id},
			#{status},
			#{num},
			#{ip},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE book_borrow SET 	
			book_id = #{bookId.id},
			user_id = #{userId.id},
			status = #{status},
			num = #{num},
			ip = #{ip},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE book_borrow SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>